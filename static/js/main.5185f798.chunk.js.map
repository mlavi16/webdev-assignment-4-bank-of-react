{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","toFixed","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","addCredit","credits","map","credit","date","slice","amount","description","id","Debits","addDebit","debits","debit","App","logInInfo","newUser","currentUser","event","Date","dateString","getFullYear","getMonth","getDate","creditList","length","prevState","Number","debitList","basename","exact","path","render","a","creditAPI","axios","get","debitResponse","creditResponse","data","response","console","log","status","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5185f798.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <h3>\n        Balance: {this.props.accountBalance.toFixed(2)}\n      </h3>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n\n  // Create the list of Credit items\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>(${credit.amount}) - {credit.description} - {date}</li>\n    }) \n  }\n\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      <AccountBalance accountBalance={props.accountBalance}/>\n\n      <form onSubmit={props.addCredit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n\n      {creditsView()}\n      <br/>\n\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>(${debit.amount}) - {debit.description} - {date}</li>\n    }) \n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      <AccountBalance accountBalance={props.accountBalance}/>\n      \n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      {debitsView()}\n      <br/>\n\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from \"axios\";\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0.0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance}/>)\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/webdev-assignment-4-bank-of-react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n\n   async componentDidMount() {\n    // Fetch credits and debits data from endpoint\n    const debitAPI = \"https://johnnylaicode.github.io/api/debits.json\";\n    const creditAPI = \"https://johnnylaicode.github.io/api/credits.json\";\n\n    try {\n      const debitResponse = await axios.get(debitAPI);\n      const creditResponse = await axios.get(creditAPI);\n      let accountBalance = this.state.accountBalance;\n      for (const data of debitResponse.data) {\n        accountBalance -= data.amount;\n      }\n      for (const data of creditResponse.data) {\n        accountBalance += data.amount;\n      }\n      this.setState({ creditList: creditResponse.data, debitList: debitResponse.data, accountBalance: accountBalance });\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n      }\n    }\n  }\n\n  addCredit = (event) => {\n    // read the description and amount from the event target and add to the list of credits.\n    event.preventDefault();\n\n    const target = event.target;\n    const date = new Date();\n    const dateString = date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate();\n    const credit = {\"id\": this.state.creditList.length+1, \"description\": target[0].value, \"amount\": target[1].value, \"date\": dateString};\n    this.setState((prevState) => ({\n      creditList: [credit, ...prevState.creditList],\n      accountBalance: prevState.accountBalance + Number(target[1].value)\n    }))\n  }\n\n  addDebit = (event) => {\n    // read the description and amount from the event target and add to the list of debits.\n    event.preventDefault();\n\n    const target = event.target;\n    const date = new Date();\n    const dateString = date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate();\n    const debit = {\"id\": this.state.debitList.length+1, \"description\": target[0].value, \"amount\": target[1].value, \"date\": dateString};\n    this.setState((prevState) => ({\n      debitList: [debit, ...prevState.debitList],\n      accountBalance: prevState.accountBalance - Number(target[1].value)\n    }))\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}